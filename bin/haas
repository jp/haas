#!/usr/bin/env ruby
require 'cluster_launcher'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: pige [option]"
  opts.on('-k', '--keypair [NAME]', 'Create a new keypair.') { |v| options[:key_pair_name] = v }

  opts.on('-a', '--add [NAME]', 'Add a new name in the "pige".') { |v| options[:new_member_name] = v }
  opts.on('-p', '--partner [NAME]', 'Optional with --add-name : add a partner to a member.') { |v| options[:new_partner_name] = v }
  opts.on('-g', '--get-pige [NAME]', 'Get the pige for a given name.') { |v| options[:get_pige] = v }
  opts.on('-r', '--run', 'Run the automated pige.') { |v| options[:run] = true }
  opts.on('-s', '--server', 'Start the pige web server.') { |v| options[:start_server] = true }
end.parse!

if options[:key_pair_name]
  ClusterController.create_key_pair();
#   PigeController.add_member options[:new_member_name], options[:new_partner_name]
#   puts I18n.t('pige.welcome', name: options[:new_member_name])
#   if options[:new_partner_name]
#     puts I18n.t('pige.welcome_partner', name: options[:new_partner_name])
#   end
# elsif options[:get_pige]
#   puts PigeController.get_pige options[:get_pige]
# elsif options[:run]
#   if PigeController.automated_pige
#     puts I18n.t('pige.automated_pige_finished')
#   else
#     puts I18n.t('pige.automated_pige_error')
#   end
# elsif options[:start_server]
#   PigeRack.start
end
